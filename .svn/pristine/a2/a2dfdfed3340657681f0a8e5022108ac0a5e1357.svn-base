// 组装模块并导出 store

import Vue from 'vue'
import Vuex from 'vuex'
import Dev from './dev.js' //   本地开发代码
import Prod from './prod.js' // 生产环境代码
Vue.use(Vuex)

const store = new Vuex.Store({
  modules: {},

  state: {
    nowCodeType: 'Prod', //     当前代码类型
    codeObj: { Dev, Prod }, // 代码类型 { Dev: '开发', Prod: '生产' }
    /**/
    isPc: true, //        是否是电脑端登录
    /**/
    helpText: '', //      帮助文字
    activeId: '', //      当前工厂ID
    apiParams: {}, //     请求[详情列表]时的参数
    leftTreeData: [], //  左侧列表树数据
    leftAlertData: {}, // 左侧弹出层数据
    rightTableData: {} // 右侧表格数据
  },

  getters: {
    /**
     * [所有项目名称]
     */
    itenames(state) {
      const { projectList } = state
      const strArr = []
      projectList.forEach(function (item) {
        strArr.push(item.item_name)
      })
      return strArr.join(',')
    }
  },

  mutations: {
    /**
     * [保存数据]
     * @param {[String]} name 属性名
     * @param {[Object]} obj  属性值
     */
    saveData(state, params) {
      const { name, obj } = params
      state[name] = obj
    },
    /**
     * [创建新表格]
     */
    createdNewTable(state) {
      state.tableArr.push(new Date().getTime())
    }
  },

  actions: {
    /**
     * [请求：列表树]
     */
    A_treeAll({ state }, params = {}) {
      state.codeObj[state.nowCodeType].A_treeAll(state, params)
    },
    /**
     * [请求：详情列表]
     */
    A_dataList({ state }, params = { f5: false }) {
      state.codeObj[state.nowCodeType].A_dataList(state, params)
    },
    /**
     * [请求：工厂上机状态]
     */
    A_showTakeUp({ state }, params = {}) {
      state.codeObj[state.nowCodeType].A_showTakeUp(state, params)
    },
    /**
     * [请求：设置上机时间段]
     */
    A_addTakeUp({ state, dispatch }, params = {}) {
      state.codeObj[state.nowCodeType].A_addTakeUp(dispatch, params)
    },
    /**
     * [请求：甘特表帮助按钮]
     */
    A_getHelpText({ state }) {
      state.codeObj[state.nowCodeType].A_getHelpText(state)
    }
    //
  }
})

export default store
